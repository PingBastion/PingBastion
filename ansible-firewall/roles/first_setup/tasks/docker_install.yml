---
- name: Ensure prerequisite packages are present
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes
  when: not pingbastion_installed.stat.exists or update_pihole is defined

- name: Add Docker’s official GPG key
  ansible.builtin.shell: |
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
      | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg
  when: not pingbastion_installed.stat.exists or update_pihole is defined

# Detect whether the target is x86-64 or 64-bit ARM
# tasks/set_arch.yml
- name: Map Ansible CPU fact to dpkg architecture (amd64 / arm64)
  set_fact:
    docker_apt_arch: "{{ (
        'arm64' if ansible_facts.architecture in
                    ['aarch64', 'arm64', 'armv8', 'armv8l']
        else 'amd64'
      ) | trim }}"
  when: not pingbastion_installed.stat.exists or update_pihole is defined



# Add Docker’s official APT repo as a single-line entry
- name: Add Docker APT repository
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ docker_apt_arch }} signed-by=/etc/apt/keyrings/docker.gpg] \
https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    filename: docker
    state: present
    update_cache: yes
  when: not pingbastion_installed.stat.exists or update_pihole is defined


- name: Install Docker engine & Compose plugin
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      - docker-compose
      - python3-docker 
    state: present
    update_cache: yes
  when: not pingbastion_installed.stat.exists or update_pihole is defined
  
- name: Ensure docker service is started
  service:
    name: docker
    state: started
    enabled: yes
  when: not pingbastion_installed.stat.exists or update_pihole is defined
      

- name: Ensure docker group exists
  group:
    name: docker
    state: present
  when: not pingbastion_installed.stat.exists or update_pihole is defined

- name: Add {{ docker_run_user }} to docker group
  user:
    name: "{{ docker_run_user }}"
    groups: docker
    append: yes
  when: docker_run_user != 'root' and ( not pingbastion_installed.stat.exists or update_pihole is defined )
    

